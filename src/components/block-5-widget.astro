<div class="utya-widget" style="
  backdrop-filter: blur(12px);
  background: rgba(255, 255, 255, 0.12);
  border: 1px solid rgba(255, 255, 255, 0.25);
  border-radius: 20px;
  padding: 32px;
  margin: 40px auto;
  max-width: 1125px;
  color: white;
  text-align: center;
  box-shadow: 0 8px 24px rgba(0,0,0,0.3);
  font-family: 'Fredoka One', cursive, sans-serif;
">

  <h2 style="font-size: 42px; margin-bottom: 20px; font-weight: 900; letter-spacing: 1.2px;">
    UTYA: The Future of Telegram Stickers & NFTs
  </h2>

  <p style="font-size: 18px; max-width: 850px; margin: 0 auto 40px auto; line-height: 1.6; color: #FFD700;">
    At 38:38, Paul Durov reveals how tokenizing Telegram stickers is reshaping digital culture â€” and why <strong>UTYA</strong> leads this vibrant NFT revolution.
  </p>

  <div class="utya-lottie-container" style="width: 80px; height: 80px; margin: 0 auto 20px auto;"></div>

  <div style="margin-bottom: 40px;">
    <iframe 
      width="100%" 
      height="480" 
      src="https://www.youtube.com/embed/gBEOJRvZ-wI?start=2320&autoplay=0&mute=0&rel=0" 
      title="UTYA Token and Telegram Stickers by Paul Durov" 
      frameborder="0" 
      allow="autoplay; encrypted-media" 
      allowfullscreen
      style="border-radius: 20px;"
    ></iframe>
  </div>

</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/lottie-web/5.10.2/lottie.min.js"></script>
<script>
  (function(){
    const containers = document.querySelectorAll('.utya-lottie-container');
    containers.forEach(container => {
      let animation = null;
      const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
          if (entry.isIntersecting) {
            if (!animation) {
              animation = lottie.loadAnimation({
                container: container,
                renderer: 'svg',
                loop: true,
                autoplay: true,
                path: '/utya-haha-classic.json'
              });
            } else {
              animation.play();
            }
          } else {
            if (animation) animation.pause();
          }
        });
      }, { threshold: 0.3 });
      observer.observe(container);
    });
  })();
</script>
